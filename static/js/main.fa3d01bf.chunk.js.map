{"version":3,"sources":["components/contactList/contactList.module.css","components/app.module.css","components/contactList/contactItem/contactItem.module.css","components/contactForm/form.module.css","components/alert/Alert.js","components/redux/contacts/actions.js","components/redux/contacts/types.js","components/contactForm/ContactForm.js","components/redux/contacts/operations.js","components/contactList/contactItem/ContactItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/App.js","components/redux/contacts/reduser.js","components/redux/store.js","components/middlewares/logger.js","index.js"],"names":["module","exports","Alert","className","addMyContact","createAction","delMyContact","filteredItems","getFormValueFetch","getFormValueSuccess","getFormValueError","mapDispatchToProps","connect","state","items","contacts","useState","name","setName","number","setNumber","allertShow","setAllertShow","handleChange","target","value","dispatch","useDispatch","onSubmit","e","param","preventDefault","find","el","setTimeout","id","uuidv4","getState","a","axios","post","data","console","log","CSSTransition","in","classNames","timeout","unmountOnExit","styles","formSection","label","type","input","onChange","required","btn","deleteContactOnFirebase","delete","contact","contactItems","data-id","onClick","onButtonDelete","x","filter","length","TransitionGroup","component","contactList","map","key","myValue","resultArr","item","toLowerCase","includes","placeholder","getFitebase","get","keys","Object","resArr","reduce","acc","push","isLoading","useEffect","page","appear","title","phonebookReducer","createReducer","payload","middleWares","next","action","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fa3d01bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"contactList_contactList__1tv4c\",\"enter\":\"contactList_enter__126zk\",\"enterActive\":\"contactList_enterActive__1H0ft\",\"exit\":\"contactList_exit__2Jbt6\",\"exitActive\":\"contactList_exitActive__1TyF7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"app_page__3fBfi\",\"title\":\"app_title__2uBHV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItems\":\"contactItem_contactItems__7TXuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"form_formSection__KoXNs\",\"input\":\"form_input__I3VON\",\"btn\":\"form_btn__Oz643\"};","import React from 'react';\n\nexport const Alert = () => {\n  return <div className=\"alert\">Choose another name!</div>;\n};\n","import { createAction } from '@reduxjs/toolkit';\nimport {\n  FORM_FETCH,\n  FORM_SUCCESS,\n  FORM_ERROR,\n  ADD_MY_CONTACT,\n  DEL_MY_CONTACT,\n  FILTERED_ITEMS,\n} from './types';\n\nexport const addMyContact = createAction(ADD_MY_CONTACT);\nexport const delMyContact = createAction(DEL_MY_CONTACT);\nexport const filteredItems = createAction(FILTERED_ITEMS);\n// export const setLocalStorege = createAction('phonebook/setLocalStorege');\n\nexport const getFormValueFetch = createAction(FORM_FETCH);\nexport const getFormValueSuccess = createAction(FORM_SUCCESS);\nexport const getFormValueError = createAction(FORM_ERROR);\n","export const FORM_FETCH = 'phonebook/FORM_FETCH';\r\nexport const FORM_SUCCESS = 'phonebook/FORM_SUCCESS';\r\nexport const FORM_ERROR = 'phonebook/FORM_ERROR';\r\nexport const ADD_MY_CONTACT = 'phonebook/ADD_MY_CONTACT';\r\nexport const DEL_MY_CONTACT = 'phonebook/DEL_MY_CONTACT';\r\nexport const FILTERED_ITEMS = 'phonebook/FILTERED_ITEMS';\r\n","import React, { useState } from 'react';\nimport { useDispatch, connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport '../../components/App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport styles from './form.module.css';\nimport { Alert } from '../alert/Alert';\nimport { addMyContact } from '../redux/contacts/actions';\nimport { postAsync } from '../redux/contacts/operations';\n\nconst ContactForm = ({ items }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [allertShow, setAllertShow] = useState(false);\n\n  const handleChange = ({ target: { value, name } }) => {\n    if (name === 'name') {\n      setName(value);\n    } else if (name === 'number') {\n      setNumber(value);\n    }\n  };\n  const dispatch = useDispatch();\n\n  const submitForm = e => {\n    e.preventDefault();\n    const lookingFor = items.find(el => el.name === name);\n    if (lookingFor) {\n      setAllertShow(true);\n      setTimeout(() => {\n        setAllertShow(false);\n      }, 2000);\n      setName('');\n      setNumber('');\n    } else {\n      dispatch(postAsync({ name: name, number: number, id: uuidv4() }));\n      setName('');\n      setNumber('');\n    }\n  };\n\n  return (\n    <>\n      <form onSubmit={submitForm}>\n        <CSSTransition\n          in={allertShow}\n          classNames=\"alert\"\n          timeout={2000}\n          unmountOnExit\n        >\n          <Alert />\n        </CSSTransition>\n        <div className={styles.formSection}>\n          <label className={styles.label}>\n            Name\n            <input\n              name=\"name\"\n              type=\"text\"\n              className={styles.input}\n              value={name}\n              onChange={handleChange}\n              required\n            />\n          </label>\n          <label className={styles.label}>\n            Number\n            <input\n              name=\"number\"\n              type=\"text\"\n              className={styles.input}\n              value={number}\n              onChange={handleChange}\n              required\n            />\n          </label>\n          <button type=\"submit\" className={styles.btn}>\n            Add Contact\n          </button>\n        </div>\n      </form>\n    </>\n  );\n};\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  addMyContact,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import axios from 'axios';\r\nimport {\r\n  getFormValueSuccess,\r\n  getFormValueFetch,\r\n  getFormValueError,\r\n  addMyContact,\r\n} from './actions';\r\n\r\nexport const getFitebase = param => async (dispatch, getState) => {\r\n  try {\r\n    const data = await axios.get(\r\n      `https://phonebook-by-roman.firebaseio.com/contacts.json`,\r\n    );\r\n    const keys = Object.keys(data.data);\r\n\r\n    const resArr = keys.reduce((acc, key) => {\r\n      acc.push({ id: key, ...data.data[key] });\r\n      return acc;\r\n    }, []);\r\n\r\n    dispatch(addMyContact(resArr));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const postAsync = param => async (dispatch, getState) => {\r\n  dispatch(getFormValueFetch());\r\n  try {\r\n    const data = await axios.post(\r\n      `https://phonebook-by-roman.firebaseio.com/contacts.json`,\r\n      param,\r\n    );\r\n    console.log('data post', data);\r\n    dispatch(getFormValueSuccess({ ...param, id: data.data.name }));\r\n  } catch (error) {\r\n    dispatch(getFormValueError(error));\r\n  } finally {\r\n    dispatch(getFormValueFetch());\r\n  }\r\n};\r\n\r\nexport const deleteContactOnFirebase = id => async (dispatch, getState) => {\r\n  console.log('id', id);\r\n  try {\r\n    const data = await axios.delete(\r\n      `https://phonebook-by-roman.firebaseio.com/contacts/${id}.json`,\r\n    );\r\n    console.log(data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from 'react';\nimport styles from './contactItem.module.css';\nimport { delMyContact } from '../../redux/contacts/actions';\nimport { connect } from 'react-redux';\nimport { deleteContactOnFirebase } from '../../redux/contacts/operations';\n\nfunction ContactItem({\n  deleteContactOnFirebase,\n  delMyContact,\n  contact: { name, number, id },\n}) {\n  const onButtonDelete = id => {\n    deleteContactOnFirebase(id);\n    delMyContact(id);\n  };\n  return (\n    <li className={styles.contactItems}>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" data-id={id} onClick={() => onButtonDelete(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  delMyContact,\n  deleteContactOnFirebase,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactItem);\n","import React from 'react';\nimport ContactItem from './contactItem/ContactItem.js';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport styles from './contactList.module.css';\nimport { connect } from 'react-redux';\n\nfunction ContactList({ x }) {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\n      {x.map(el => (\n        <CSSTransition\n          key={el.id}\n          timeout={250}\n          classNames={styles}\n          unmountOnExit\n        >\n          <ContactItem key={el.id} contact={el} />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n}\nconst mapStateToProps = state => ({\n  x:\n    state.contacts.filter.length > 0\n      ? state.contacts.filter\n      : state.contacts.items,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport styles from '../contactForm/form.module.css';\nimport { filteredItems } from '../redux/contacts/actions';\nimport { connect } from 'react-redux';\n\nfunction Filter({ filteredItems, items }) {\n  const getValue = ({ target: { value } }) => {\n    const filterItems = (myArr, myValue) => {\n      return myArr.filter(item =>\n        item.name.toLowerCase().includes(myValue.toLowerCase()),\n      );\n    };\n    const resultArr = filterItems(items, value);\n    filteredItems(resultArr);\n  };\n\n  return (\n    <div className={styles.formSection}>\n      <label className={styles.label}>\n        Find contacts by name\n        <input\n          onChange={getValue}\n          type=\"text\"\n          className={styles.input}\n          name=\"filter\"\n          placeholder=\"Enter name\"\n        />\n      </label>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n});\n\nconst mapDispatchToProps = {\n  filteredItems,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { useEffect } from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './contactForm/ContactForm.js';\nimport ContactList from './contactList/ContactList.js';\nimport Filter from './filter/Filter.js';\n// import { setLocalStorege } from './redux/contacts/actions';\nimport './App.css';\nimport styles from './app.module.css';\nimport { connect } from 'react-redux';\nimport { getFitebase } from './redux/contacts/operations';\n\nfunction App({ items, getFitebase, isLoading }) {\n  // useEffect(() => {\n  //   const items = localStorage.getItem('items');\n  //   const itemsParsed = JSON.parse(items);\n  //   if (itemsParsed) {\n  //     setLocalStorege(itemsParsed);\n  //   }\n  // }, [setLocalStorege]);\n\n  // useEffect(() => {\n  //   localStorage.setItem('items', JSON.stringify(items));\n  // }, [items]);\n\n  useEffect(() => {\n    getFitebase();\n  }, [getFitebase]);\n\n  return (\n    <>\n      <div className={styles.page}>\n        {isLoading && <h2>...loading...</h2>}\n        <CSSTransition\n          in={true}\n          timeout={500}\n          classNames=\"main-title\"\n          appear\n          unmountOnExit\n        >\n          <h2 className={styles.title}>Phonebook</h2>\n        </CSSTransition>\n        <ContactForm />\n        {items.length > 1 ? <Filter /> : null}\n        <ContactList />\n      </div>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  items: state.contacts.items,\n  isLoading: state.isLoading,\n});\n\nconst mapDispatchToProps = {\n  getFitebase, // setLocalStorege,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport {\n  FORM_FETCH,\n  FORM_SUCCESS,\n  FORM_ERROR,\n  ADD_MY_CONTACT,\n  DEL_MY_CONTACT,\n  FILTERED_ITEMS,\n} from './types';\n\nconst initialState = {\n  contacts: {\n    items: [],\n    filter: [],\n  },\n  isLoading: false,\n};\n\nexport const phonebookReducer = createReducer(initialState, {\n  [ADD_MY_CONTACT]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: [...payload],\n    },\n  }),\n\n  [FORM_FETCH]: (state, { payload }) => ({\n    ...state,\n    isLoading: !state.isLoading,\n  }),\n\n  [FORM_SUCCESS]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: [...state.contacts.items, payload],\n    },\n  }),\n\n  [FORM_ERROR]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: [...state.contacts.items, payload],\n    },\n  }),\n\n  [DEL_MY_CONTACT]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      items: state.contacts.items.filter(contact => contact.id !== payload),\n      filter: state.contacts.filter.filter(contact => contact.id !== payload),\n    },\n  }),\n\n  // [actions.setLocalStorege]: (state, { payload }) => ({\n  //   ...state,\n  //   contacts: {\n  //     ...state.contacts,\n  //     items: [...payload],\n  //   },\n  // }),\n\n  [FILTERED_ITEMS]: (state, { payload }) => ({\n    ...state,\n    contacts: {\n      ...state.contacts,\n      filter: [...payload],\n    },\n  }),\n});\n","// import { phonebookReducer } from './contacts/reduser';\n// import { configureStore } from '@reduxjs/toolkit';\n\n// const store = configureStore({\n//   reducer: phonebookReducer,\n//   devTools: process.env.NODE_ENV !== 'production',\n// });\n\n\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { logger } from '../middlewares/logger';\nimport { phonebookReducer } from './contacts/reduser';\n\nconst middleWares = [logger];\nconst store = createStore(\n  phonebookReducer,\n  composeWithDevTools(applyMiddleware(...middleWares)),\n);\n\n\nexport default store;","export const logger = ({ dispatch, getState }) => next => action =>\r\n  typeof action === 'function' ? action(dispatch, getState) : next(action);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './components/App.js';\nimport store from './components/redux/store';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}